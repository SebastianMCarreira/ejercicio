name: Build, Push Docker Image and Apply Terraform

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ejercicio
      IMAGE_TAG: latest
      DOCKER_HUB_USERNAME: scarreiraaws
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker registry
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t $IMAGE_NAME:$IMAGE_TAG ./app

    - name: Tag Docker image for remote
      run: |
        docker tag $IMAGE_NAME:$IMAGE_TAG $DOCKER_HUB_USERNAME/$IMAGE_NAME:$IMAGE_TAG

    - name: Push Docker image to remote
      run: |
        docker push $DOCKER_HUB_USERNAME/$IMAGE_NAME:$IMAGE_TAG
    
    - name: Configure AWS Credentials for github actions
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        audience: sts.amazonaws.com
        aws-region: ${{secrets.AWS_REGION}}
        role-to-assume: ${{secrets.ROLE_TO_ASSUME}}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      working-directory: infra
      run: terraform init

    - name: Terraform Apply
      working-directory: infra
      run: terraform apply -auto-approve

    - name: Write SSH key to file
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/deploy.pem
        chmod 600 ~/.ssh/deploy.pem
    
    - name: Update inventory
      run: |
        aws ec2 describe-instances --filters "Name=tag:Name,Values=ejercicio-ec2" --query "Reservations[].Instances[].PublicIpAddress" --output text | xargs -I {} sed "s/PUBLIC_IP/{}/g" ansible/inventory.ini.template > ansible/inventory.ini

    - name: Run Ansible Playbook
      run: |
        ansible-playbook -i ansible/inventory.ini ansible/deploy_container.yml
